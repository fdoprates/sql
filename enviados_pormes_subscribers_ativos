ðŸ“˜ DocumentaÃ§Ã£o TÃ©cnica â€“ RelatÃ³rio de Impacto Mensal por Subscribers (SFMC)
Objetivo

Criar uma estrutura de monitoramento mensal no Salesforce Marketing Cloud (SFMC) que registre:
1. Total de pessoas Ãºnicas impactadas (envios) por mÃªs
2. Total de impactados ativos por mÃªs (baseado em Status = 'Active' no momento da execuÃ§Ã£o)
3. Tamanho total da base ativa atual
4. Data de execuÃ§Ã£o da extraÃ§Ã£o
A estrutura deve armazenar dados historicamente, sem sobrescrever entradas anteriores.

Estrutura da Data Extension (DE)
Nome sugerido: Impacto_Mensal_Historico

Campo

Tipo

ObrigatÃ³rio

DescriÃ§Ã£o

Month

Text

Sim

MÃªs (MM) do perÃ­odo calculado

Year

Text

Sim

Ano (YYYY) do perÃ­odo calculado

UniqueSubscribers

Number

Sim

Pessoas ativas que receberam e-mails no mÃªs

SentCount

Number

Sim

Pessoas Ãºnicas que receberam e-mails no mÃªs

TotalActiveSubscribersNow

Number

Sim

Total de subscribers ativos na data da execuÃ§Ã£o

CreatedDate

Date

Sim

Data e hora da execuÃ§Ã£o da query

Modo de escrita: Append
Chave primÃ¡ria opcional: Month + Year

Query SQL â€“ HistÃ³rico dos Ãšltimos 6 Meses (Otimizada)
Para evitar timeout com bases muito grandes (ex: >11 milhÃµes de subscribers), a query Ã© fracionada por mÃªs.
Execute uma query por vez, substituindo o valor de OFFSET (-n) conforme o mÃªs desejado.

--- MÃªs OFFSET: -0 ---


SELECT
   RIGHT('0' + CAST(MONTH(DATEADD(MONTH, -0, GETDATE())) AS VARCHAR), 2) AS Month,
   CAST(YEAR(DATEADD(MONTH, -0, GETDATE())) AS VARCHAR) AS Year,

   (
       SELECT COUNT(DISTINCT s.SubscriberKey)
       FROM _Sent s
       INNER JOIN _Subscribers sub ON s.SubscriberKey = sub.SubscriberKey
       WHERE
           MONTH(s.EventDate) = MONTH(DATEADD(MONTH, -0, GETDATE()))
           AND YEAR(s.EventDate) = YEAR(DATEADD(MONTH, -0, GETDATE()))
           AND sub.Status = 'Active'
   ) AS UniqueSubscribers,

   (
       SELECT COUNT(DISTINCT s.SubscriberKey)
       FROM _Sent s
       WHERE
           MONTH(s.EventDate) = MONTH(DATEADD(MONTH, -0, GETDATE()))
           AND YEAR(s.EventDate) = YEAR(DATEADD(MONTH, -0, GETDATE()))
   ) AS SentCount,

   (
       SELECT COUNT(DISTINCT SubscriberKey)
       FROM _Subscribers
       WHERE Status = 'Active'
   ) AS TotalActiveSubscribersNow,

   GETDATE() AS CreatedDate

--- MÃªs OFFSET: -1 ---


SELECT
   RIGHT('0' + CAST(MONTH(DATEADD(MONTH, -1, GETDATE())) AS VARCHAR), 2) AS Month,
   CAST(YEAR(DATEADD(MONTH, -1, GETDATE())) AS VARCHAR) AS Year,

   (
       SELECT COUNT(DISTINCT s.SubscriberKey)
       FROM _Sent s
       INNER JOIN _Subscribers sub ON s.SubscriberKey = sub.SubscriberKey
       WHERE
           MONTH(s.EventDate) = MONTH(DATEADD(MONTH, -1, GETDATE()))
           AND YEAR(s.EventDate) = YEAR(DATEADD(MONTH, -1, GETDATE()))
           AND sub.Status = 'Active'
   ) AS UniqueSubscribers,

   (
       SELECT COUNT(DISTINCT s.SubscriberKey)
       FROM _Sent s
       WHERE
           MONTH(s.EventDate) = MONTH(DATEADD(MONTH, -1, GETDATE()))
           AND YEAR(s.EventDate) = YEAR(DATEADD(MONTH, -1, GETDATE()))
   ) AS SentCount,

   (
       SELECT COUNT(DISTINCT SubscriberKey)
       FROM _Subscribers
       WHERE Status = 'Active'
   ) AS TotalActiveSubscribersNow,

   GETDATE() AS CreatedDate

--- MÃªs OFFSET: -2 ---


SELECT
   RIGHT('0' + CAST(MONTH(DATEADD(MONTH, -2, GETDATE())) AS VARCHAR), 2) AS Month,
   CAST(YEAR(DATEADD(MONTH, -2, GETDATE())) AS VARCHAR) AS Year,

   (
       SELECT COUNT(DISTINCT s.SubscriberKey)
       FROM _Sent s
       INNER JOIN _Subscribers sub ON s.SubscriberKey = sub.SubscriberKey
       WHERE
           MONTH(s.EventDate) = MONTH(DATEADD(MONTH, -2, GETDATE()))
           AND YEAR(s.EventDate) = YEAR(DATEADD(MONTH, -2, GETDATE()))
           AND sub.Status = 'Active'
   ) AS UniqueSubscribers,

   (
       SELECT COUNT(DISTINCT s.SubscriberKey)
       FROM _Sent s
       WHERE
           MONTH(s.EventDate) = MONTH(DATEADD(MONTH, -2, GETDATE()))
           AND YEAR(s.EventDate) = YEAR(DATEADD(MONTH, -2, GETDATE()))
   ) AS SentCount,

   (
       SELECT COUNT(DISTINCT SubscriberKey)
       FROM _Subscribers
       WHERE Status = 'Active'
   ) AS TotalActiveSubscribersNow,

   GETDATE() AS CreatedDate

--- MÃªs OFFSET: -3 ---


SELECT
   RIGHT('0' + CAST(MONTH(DATEADD(MONTH, -3, GETDATE())) AS VARCHAR), 2) AS Month,
   CAST(YEAR(DATEADD(MONTH, -3, GETDATE())) AS VARCHAR) AS Year,

   (
       SELECT COUNT(DISTINCT s.SubscriberKey)
       FROM _Sent s
       INNER JOIN _Subscribers sub ON s.SubscriberKey = sub.SubscriberKey
       WHERE
           MONTH(s.EventDate) = MONTH(DATEADD(MONTH, -3, GETDATE()))
           AND YEAR(s.EventDate) = YEAR(DATEADD(MONTH, -3, GETDATE()))
           AND sub.Status = 'Active'
   ) AS UniqueSubscribers,

   (
       SELECT COUNT(DISTINCT s.SubscriberKey)
       FROM _Sent s
       WHERE
           MONTH(s.EventDate) = MONTH(DATEADD(MONTH, -3, GETDATE()))
           AND YEAR(s.EventDate) = YEAR(DATEADD(MONTH, -3, GETDATE()))
   ) AS SentCount,

   (
       SELECT COUNT(DISTINCT SubscriberKey)
       FROM _Subscribers
       WHERE Status = 'Active'
   ) AS TotalActiveSubscribersNow,

   GETDATE() AS CreatedDate

--- MÃªs OFFSET: -4 ---


SELECT
   RIGHT('0' + CAST(MONTH(DATEADD(MONTH, -4, GETDATE())) AS VARCHAR), 2) AS Month,
   CAST(YEAR(DATEADD(MONTH, -4, GETDATE())) AS VARCHAR) AS Year,

   (
       SELECT COUNT(DISTINCT s.SubscriberKey)
       FROM _Sent s
       INNER JOIN _Subscribers sub ON s.SubscriberKey = sub.SubscriberKey
       WHERE
           MONTH(s.EventDate) = MONTH(DATEADD(MONTH, -4, GETDATE()))
           AND YEAR(s.EventDate) = YEAR(DATEADD(MONTH, -4, GETDATE()))
           AND sub.Status = 'Active'
   ) AS UniqueSubscribers,

   (
       SELECT COUNT(DISTINCT s.SubscriberKey)
       FROM _Sent s
       WHERE
           MONTH(s.EventDate) = MONTH(DATEADD(MONTH, -4, GETDATE()))
           AND YEAR(s.EventDate) = YEAR(DATEADD(MONTH, -4, GETDATE()))
   ) AS SentCount,

   (
       SELECT COUNT(DISTINCT SubscriberKey)
       FROM _Subscribers
       WHERE Status = 'Active'
   ) AS TotalActiveSubscribersNow,

   GETDATE() AS CreatedDate

--- MÃªs OFFSET: -5 ---


SELECT
   RIGHT('0' + CAST(MONTH(DATEADD(MONTH, -5, GETDATE())) AS VARCHAR), 2) AS Month,
   CAST(YEAR(DATEADD(MONTH, -5, GETDATE())) AS VARCHAR) AS Year,

   (
       SELECT COUNT(DISTINCT s.SubscriberKey)
       FROM _Sent s
       INNER JOIN _Subscribers sub ON s.SubscriberKey = sub.SubscriberKey
       WHERE
           MONTH(s.EventDate) = MONTH(DATEADD(MONTH, -5, GETDATE()))
           AND YEAR(s.EventDate) = YEAR(DATEADD(MONTH, -5, GETDATE()))
           AND sub.Status = 'Active'
   ) AS UniqueSubscribers,

   (
       SELECT COUNT(DISTINCT s.SubscriberKey)
       FROM _Sent s
       WHERE
           MONTH(s.EventDate) = MONTH(DATEADD(MONTH, -5, GETDATE()))
           AND YEAR(s.EventDate) = YEAR(DATEADD(MONTH, -5, GETDATE()))
   ) AS SentCount,

   (
       SELECT COUNT(DISTINCT SubscriberKey)
       FROM _Subscribers
       WHERE Status = 'Active'
   ) AS TotalActiveSubscribersNow,

   GETDATE() AS CreatedDate

Query SQL â€“ VersÃ£o Mensal Automatizada
Essa versÃ£o Ã© usada para agendamento mensal (ex: primeiro dia de cada mÃªs), capturando dados do mÃªs atual.


SELECT
   RIGHT('0' + CAST(MONTH(GETDATE()) AS VARCHAR), 2) AS Month,
   CAST(YEAR(GETDATE()) AS VARCHAR) AS Year,

   (
       SELECT COUNT(DISTINCT s.SubscriberKey)
       FROM _Sent s
       INNER JOIN _Subscribers sub ON s.SubscriberKey = sub.SubscriberKey
       WHERE
           MONTH(s.EventDate) = MONTH(GETDATE())
           AND YEAR(s.EventDate) = YEAR(GETDATE())
           AND sub.Status = 'Active'
   ) AS UniqueSubscribers,

   (
       SELECT COUNT(DISTINCT s.SubscriberKey)
       FROM _Sent s
       WHERE
           MONTH(s.EventDate) = MONTH(GETDATE())
           AND YEAR(s.EventDate) = YEAR(GETDATE())
   ) AS SentCount,

   (
       SELECT COUNT(DISTINCT SubscriberKey)
       FROM _Subscribers
       WHERE Status = 'Active'
   ) AS TotalActiveSubscribersNow,

   GETDATE() AS CreatedDate

ValidaÃ§Ã£o e ConsideraÃ§Ãµes Finais

- A DE deve conter 1 linha por mÃªs executado.
- Campos Month e Year devem estar corretos.
- SentCount e UniqueSubscribers devem ser diferentes, refletindo o filtro de status.
- TotalActiveSubscribersNow Ã© constante por execuÃ§Ã£o.
- A versÃ£o mensal deve ser agendada com modo Append.
- As queries fracionadas devem ser executadas uma de cada vez para evitar timeout.